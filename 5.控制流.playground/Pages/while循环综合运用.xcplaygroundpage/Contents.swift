import UIKit
//: while循环执行一系列操作,直到条件不成立(false).
//:   最好用于循环次数未知的情况.


//:  - while循环:在每一次循环开始前就评估条件是否满足.
//:  - repeat-while循环:在每一次循环结束后评估.

//:  - 格式:while 条件 { 语句 } 🆚 repeat { 语句 } 条件
//:      🌰新视野号到达冥王星. 条件:距离达到最近13695公里处(0个天文单位). 起始距离:50亿公里(33个天文单位), 摆脱内行星引力阶段:绕地球-6,火星-2,木星+?,土星+?,天王星+?,海王星+?
let 最终距离 = 33
var 行星加速表 = [Int](count: 7, repeatedValue: 0)

行星加速表[1] = -6
行星加速表[2] = -2
行星加速表[3] = +9
行星加速表[4] = +2
行星加速表[5] = +2
行星加速表[6] = +1

var 飞行距离 = 0
var 速度 = 1
var 加速次数 = 0

while 飞行距离 < 最终距离 {
    //开始飞行
    if ++加速次数 == 6 {
        print("加速机会已经用完,但未达到冥王星,任务失败!")
        break
    }
    
    //加速
    if 加速次数 <= 行星加速表.count {
        速度 += 行星加速表[加速次数]
    }
    
    //飞行距离变化
    飞行距离 += 速度 * 加速次数
}

飞行距离



if 飞行距离 == 最终距离 {
    print("成功到达冥王星!")
    UIImage(named: "track.jpg")
    UIImage(named: "jupiter.jpg")
    UIImage(named: "pluto_heart.jpg")
}

//: [控制转移语句](@next)
